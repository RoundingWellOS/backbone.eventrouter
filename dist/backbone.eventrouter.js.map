{"version":3,"sources":["backbone.eventrouter.js"],"names":[],"mappings":"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","file":"backbone.eventrouter.js","sourcesContent":["/**\n * backbone.eventrouter - A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel\n * @version v0.2.0\n * @link https://github.com/RoundingWellOS/backbone.eventrouter\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.radio')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.radio'], factory) :\n  global.Backbone.EventRouter = factory(global._, global.Backbone, global.Radio)\n}(this, function (_, Backbone, Radio) { 'use strict';\n\n  var EventRouter = Backbone.EventRouter = Backbone.Router.extend({\n\n    /**\n     * @public\n     * @constructs EventRouter\n     * @param {Object} [options] - Settings for the EventRouter\n     * @param {Boolean} [options.channelName]\n     * @param {Boolean} [options.routeTriggers]\n     */\n    constructor: function(options) {\n      options = _.extend({}, options);\n\n      // Backbone.Router routes are added first\n      // Routes can be added after the triggerRoutes with the Backbone.Router API\n      Backbone.Router.apply(this, arguments);\n\n      _.extend(this, _.pick(options, ['channelName', 'routeTriggers']));\n\n      this._ch = Backbone.Radio.channel(_.result(this, 'channelName'));\n\n      this._initRoutes();\n\n      this.listenTo(this._ch, 'all', this.navigateFromEvent);\n    },\n\n    /**\n     * The Radio Channel name.\n     *\n     * @type {String}\n     * @default 'event-router'\n     */\n    channelName: 'event-router',\n\n    /**\n     * Get the router's Radio channel instance\n     *\n     * @public\n     * @method getChannel\n     * @memberOf EventRouter\n     * @returns {Backbone.Radio.Channel}\n     */\n    getChannel: function() {\n      return this._ch;\n    },\n\n    /**\n     * For each routeTrigger it adds a route to Backbone.Router\n     *\n     * @private\n     * @method _initRoutes\n     * @memberOf EventRouter\n     */\n    _initRoutes: function() {\n      this._routeTriggers = _.result(this, 'routeTriggers') || {};\n\n      _.each(this._routeTriggers, this._addRouteTrigger, this);\n    },\n\n    /**\n     * Adds a route(s) to Backbone.Router which on route triggers\n     * the appropriate event\n     *\n     * @private\n     * @method _addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     */\n    _addRouteTrigger: function(routes, event){\n      // handle any route as an array by default for the _.each\n      routes = _.isArray(routes) ? routes : [routes];\n\n      _.each(routes, function(route) {\n        this.route(route, event, _.bind(this._ch.trigger, this._ch, event));\n      }, this);\n    },\n\n    /**\n     * Adds a routeTrigger, and route(s) to Backbone.Router\n     * which on route triggers the appropriate event.\n     *\n     * @public\n     * @method addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    addRouteTrigger: function(routes, event){\n      this._routeTriggers[event] = routes;\n      this._addRouteTrigger(routes, event);\n\n      return this;\n    },\n\n    /**\n     * Overrides `Backbone.Router.route()\n     * Like Backbone.Router.Route but with before events\n     * It also temporarily stores the event for understanding\n     * what route is currently being handled.\n     *\n     * @public\n     * @method route\n     * @param {String} route - Route string\n     * @param {String} [name] - Name of route\n     * @param {String} callback - Function called on route\n     * @event EventRouter#before:route - passes route name and route arguments\n     * @event EventRouter#before:route:{event_name} - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    route: function(route, name, callback) {\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) {\n        callback = this[name];\n      }\n\n      var wrappedCallback = _.bind(function() {\n\n        var args = _.drop(arguments, 0);\n\n        //trigger before: events that match currently triggered events\n        this.trigger('before:route', name, args);\n        this.trigger.apply(this, ['before:route:' + name].concat(args));\n\n        this._storeRouteTrigger([name].concat(args));\n        callback.apply(this, args);\n        this._clearRouteTrigger();\n\n      }, this);\n\n      return Backbone.Router.prototype.route.call(this, route, name, wrappedCallback);\n    },\n\n    /**\n     * Stores the route name and route arguments on a stack\n     *\n     * @private\n     * @method _storeRouteTrigger\n     * @param {Array} args - Array of route name and route arguments\n     * @memberOf EventRouter\n     */\n    _storeRouteTrigger: function(args){\n      this._routeArgs = this._routeArgs || [];\n      this._routeArgs.push(args);\n    },\n\n\n    /**\n     * Gets the top of the triggered route store stack\n     *\n     * @private\n     * @method _getCurrentRouteTrigger\n     * @memberOf EventRouter\n     * @returns {Array}\n     */\n    _getCurrentRouteTrigger: function(){\n      return _.last(this._routeArgs) || [];\n    },\n\n    /**\n     * Pops the latests route triggered off of the store stack\n     *\n     * @private\n     * @method _clearRouteTrigger\n     * @memberOf EventRouter\n     */\n    _clearRouteTrigger: function(){\n      this._routeArgs.pop();\n    },\n\n    /**\n     * Checks to see if the current event being tests is the latest\n     * route being handled by comparing the route name and arguments\n     *\n     * @private\n     * @method _isTriggeredFromRoute\n     * @memberOf EventRouter\n     * @returns {Boolean}\n     */\n    _isTriggeredFromRoute: function(){\n      var currentRoute = this._getCurrentRouteTrigger();\n\n      if(arguments.length !== currentRoute.length){\n        return false;\n      }\n\n      return (arguments.length === _.union(arguments, this.currentRoute).length);\n    },\n\n    /**\n     * Takes a event string and any arguments passed to that event\n     * And if not initiated by a route, translates the event into a\n     * URL and navigates to it without re-triggering the route\n     *\n     * @public\n     * @method navigateFromEvent\n     * @param {String} event - Event string\n     * @event EventRouter#noMatch - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    navigateFromEvent: function(event) {\n      var route = this.getDefaultRoute(event);\n\n      // if no matching route exists do nothing\n      if(!route) {\n        var args = _.drop(arguments, 0);\n        this.trigger.apply(this, ['noMatch'].concat(args));\n        return this;\n      }\n\n      if(this._isTriggeredFromRoute.apply(this, arguments)) {\n        return this;\n      }\n\n      var eventArgs = _.drop(arguments, 1);\n\n      var translatedRoute = this.translateRoute(route, eventArgs);\n\n      // update URL without triggering the route\n      return this.navigate(translatedRoute, { trigger: false });\n    },\n\n    /**\n     * Get the default route string\n     * Either the first of the array or the passed in event if singular\n     *\n     * @public\n     * @method getDefaultRoute\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    getDefaultRoute: function(event) {\n      var routes = this._routeTriggers[event];\n\n      return _.isArray(routes) ? routes[0] : routes;\n    },\n\n    /**\n     * Finds the next name params (ie: :param) and replaces it with the arg\n     *\n     * @private\n     * @method _replaceParam\n     * @param {String} route - Route string\n     * @param {String|Number} arg - value to replace named param\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    _replaceParam: function(route, arg){\n      // https://github.com/jashkenas/backbone/blob/1.2.1/backbone.js#L1425\n      var namedParam = /(\\(\\?)?:\\w+/;\n\n      return route.replace(namedParam, arg);\n    },\n\n    /**\n     * Takes a route string and an array or arguments\n     * and returns a url with the named params replaced with the argument values\n     *\n     * @public\n     * @method translateRoute\n     * @param {String} route - Route string\n     * @param {Array} eventArgs - Passed event arguments\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    translateRoute: function(route, eventArgs) {\n      return _.reduce(eventArgs, this._replaceParam, route);\n    }\n  });\n\n  var backbone_eventrouter = EventRouter;\n\n  return backbone_eventrouter;\n\n}));\n//# sourceMappingURL=./backbone.eventrouter.js.map"],"sourceRoot":"/source/"}