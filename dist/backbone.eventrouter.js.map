{"version":3,"file":"backbone.eventrouter.js","sources":["src/backbone.eventrouter.js"],"sourcesContent":["import _ from 'underscore';\nimport Backbone from 'backbone';\nimport Radio from 'backbone.radio'; // eslint-disable-line\n\n/**\n * Backbone.Router coupled with a Backbone.Radio Channel.\n *\n * @public\n * @class EventRouter\n * @memberOf Backbone\n */\nconst EventRouter = Backbone.EventRouter = Backbone.Router.extend({\n\n  /**\n   * @public\n   * @constructs EventRouter\n   * @param {Object} [options] - Settings for the EventRouter\n   * @param {Boolean} [options.channelName]\n   * @param {Boolean} [options.routeTriggers]\n   */\n  constructor: function(options) {\n    options = _.extend({}, options);\n\n    // Backbone.Router routes are added first\n    // Routes can be added after the triggerRoutes with the Backbone.Router API\n    Backbone.Router.apply(this, arguments);\n\n    _.extend(this, _.pick(options, ['channelName', 'routeTriggers']));\n\n    this._ch = Backbone.Radio.channel(_.result(this, 'channelName'));\n\n    this._initRoutes();\n\n    this.listenTo(this._ch, 'all', this.navigateFromEvent);\n  },\n\n  /**\n   * The Radio Channel name.\n   *\n   * @type {String}\n   * @default 'event-router'\n   */\n  channelName: 'event-router',\n\n  /**\n   * Get the router's Radio channel instance\n   *\n   * @public\n   * @method getChannel\n   * @memberOf EventRouter\n   * @returns {Backbone.Radio.Channel}\n   */\n  getChannel: function() {\n    return this._ch;\n  },\n\n  /**\n   * For each routeTrigger it adds a route to Backbone.Router\n   *\n   * @private\n   * @method _initRoutes\n   * @memberOf EventRouter\n   */\n  _initRoutes: function() {\n    this._routeTriggers = _.result(this, 'routeTriggers') || {};\n\n    _.each(this._routeTriggers, this._addRouteTrigger, this);\n  },\n\n  /**\n   * Adds a route(s) to Backbone.Router which on route triggers\n   * the appropriate event\n   *\n   * @private\n   * @method _addRouteTrigger\n   * @param {Array|String} routes - Route string or array of route strings\n   * @param {String} event - Event string to trigger on route\n   * @memberOf EventRouter\n   */\n  _addRouteTrigger: function(routes, event) {\n    // handle any route as an array by default for the _.each\n    routes = _.isArray(routes) ? routes : [routes];\n\n    _.each(routes, function(route) {\n      this.route(route, event, _.bind(this._ch.trigger, this._ch, event));\n    }, this);\n  },\n\n  /**\n   * Adds a routeTrigger, and route(s) to Backbone.Router\n   * which on route triggers the appropriate event.\n   *\n   * @public\n   * @method addRouteTrigger\n   * @param {Array|String} routes - Route string or array of route strings\n   * @param {String} event - Event string to trigger on route\n   * @memberOf EventRouter\n   * @returns {EventRouter}\n   */\n  addRouteTrigger: function(routes, event) {\n    this._routeTriggers[event] = routes;\n    this._addRouteTrigger(routes, event);\n\n    return this;\n  },\n\n  /**\n   * Overrides `Backbone.Router.route()\n   * Like Backbone.Router.Route but with before events\n   * It also temporarily stores the event for understanding\n   * what route is currently being handled.\n   *\n   * @public\n   * @method route\n   * @param {String} route - Route string\n   * @param {String} [name] - Name of route\n   * @param {String} callback - Function called on route\n   * @event EventRouter#before:route - passes route name and route arguments\n   * @event EventRouter#before:route:{event_name} - passes route arguments\n   * @memberOf EventRouter\n   * @returns {EventRouter}\n   */\n  route: function(route, name, callback) {\n    if(_.isFunction(name)) {\n      callback = name;\n      name = '';\n    }\n    if(!callback) {\n      callback = this[name];\n    }\n\n    const wrappedCallback = _.bind(function() {\n      const args = _.drop(arguments, 0);\n\n      // Trigger before: events that match currently triggered events\n      this.trigger('before:route', name, args);\n      this.trigger.apply(this, [`before:route:${ name }`].concat(args));\n\n      this._storeRouteTrigger([name].concat(args));\n      callback.apply(this, args);\n      this._clearRouteTrigger();\n    }, this);\n\n    return Backbone.Router.prototype.route.call(this, route, name, wrappedCallback);\n  },\n\n  /**\n   * Stores the route name and route arguments on a stack\n   *\n   * @private\n   * @method _storeRouteTrigger\n   * @param {Array} args - Array of route name and route arguments\n   * @memberOf EventRouter\n   */\n  _storeRouteTrigger: function(args) {\n    this._routeArgs = this._routeArgs || [];\n    this._routeArgs.push(args);\n  },\n\n\n  /**\n   * Gets the top of the triggered route store stack\n   *\n   * @private\n   * @method _getCurrentRouteTrigger\n   * @memberOf EventRouter\n   * @returns {Array}\n   */\n  _getCurrentRouteTrigger: function() {\n    return _.last(this._routeArgs) || [];\n  },\n\n  /**\n   * Pops the latests route triggered off of the store stack\n   *\n   * @private\n   * @method _clearRouteTrigger\n   * @memberOf EventRouter\n   */\n  _clearRouteTrigger: function() {\n    this._routeArgs.pop();\n  },\n\n  /**\n   * Checks to see if the current event being tests is the latest\n   * route being handled by comparing the route name and arguments\n   *\n   * @private\n   * @method _isTriggeredFromRoute\n   * @memberOf EventRouter\n   * @returns {Boolean}\n   */\n  _isTriggeredFromRoute: function() {\n    const currentRoute = this._getCurrentRouteTrigger();\n\n    if(arguments.length !== currentRoute.length) {\n      return false;\n    }\n\n    return (arguments.length === _.union(arguments, this.currentRoute).length);\n  },\n\n  /**\n   * Takes a event string and any arguments passed to that event\n   * And if not initiated by a route, translates the event into a\n   * URL and navigates to it without re-triggering the route\n   *\n   * @public\n   * @method navigateFromEvent\n   * @param {String} event - Event string\n   * @event EventRouter#noMatch - passes route arguments\n   * @memberOf EventRouter\n   * @returns {EventRouter}\n   */\n  navigateFromEvent: function(event) {\n    const route = this.getDefaultRoute(event);\n\n    // if no matching route exists do nothing\n    if(!route) {\n      const args = _.drop(arguments, 0);\n      this.trigger.apply(this, ['noMatch'].concat(args));\n      return this;\n    }\n\n    if(this._isTriggeredFromRoute.apply(this, arguments)) {\n      return this;\n    }\n\n    const eventArgs = _.drop(arguments, 1);\n\n    const translatedRoute = this.translateRoute(route, eventArgs);\n\n    // update URL without triggering the route\n    return this.navigate(translatedRoute, { trigger: false });\n  },\n\n  /**\n   * Get the default route string\n   * Either the first of the array or the passed in event if singular\n   *\n   * @public\n   * @method getDefaultRoute\n   * @memberOf EventRouter\n   * @returns {String}\n   */\n  getDefaultRoute: function(event) {\n    const routes = this._routeTriggers[event];\n\n    return _.isArray(routes) ? routes[0] : routes;\n  },\n\n  /**\n   * Finds the next name params (ie: :param) and replaces it with the arg\n   *\n   * @private\n   * @method _replaceParam\n   * @param {String} route - Route string\n   * @param {String|Number} arg - value to replace named param\n   * @memberOf EventRouter\n   * @returns {String}\n   */\n  _replaceParam: function(route, arg) {\n    // https://github.com/jashkenas/backbone/blob/1.2.1/backbone.js#L1425\n    const namedParam = /(\\(\\?)?:\\w+/;\n\n    return route.replace(namedParam, arg);\n  },\n\n  /**\n   * Takes a route string and an array or arguments\n   * and returns a url with the named params replaced with the argument values\n   *\n   * @public\n   * @method translateRoute\n   * @param {String} route - Route string\n   * @param {Array} eventArgs - Passed event arguments\n   * @memberOf EventRouter\n   * @returns {String}\n   */\n  translateRoute: function(route, eventArgs) {\n    return _.reduce(eventArgs, this._replaceParam, route);\n  }\n});\n\nexport default EventRouter;\n"],"names":["EventRouter","Backbone","Router","extend","constructor","options","_","apply","arguments","pick","_ch","Radio","channel","result","_initRoutes","listenTo","navigateFromEvent","channelName","getChannel","_routeTriggers","each","_addRouteTrigger","routes","event","isArray","route","bind","trigger","addRouteTrigger","name","callback","isFunction","wrappedCallback","args","drop","concat","_storeRouteTrigger","_clearRouteTrigger","prototype","call","_routeArgs","push","_getCurrentRouteTrigger","last","pop","_isTriggeredFromRoute","currentRoute","length","union","getDefaultRoute","eventArgs","translatedRoute","translateRoute","navigate","_replaceParam","arg","namedParam","replace","reduce"],"mappings":";;;;;;;;;;;;;;;;EAEoC;;AAEpC,EAAA;;;;;;;AAOA,EAAA,IAAMA,cAAcC,SAASD,WAAT,GAAuBC,SAASC,MAAT,CAAgBC,MAAhB,CAAuB;;AAEhE,EAAA;;;;;;;AAOAC,EAAAA,eAAa,qBAASC,OAAT,EAAkB;AAC7BA,EAAAA,cAAUC,EAAEH,MAAF,CAAS,EAAT,EAAaE,OAAb,CAAV;;AAEA,EAAA;AACA,EAAA;AACAJ,EAAAA,aAASC,MAAT,CAAgBK,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B;;AAEAF,EAAAA,MAAEH,MAAF,CAAS,IAAT,EAAeG,EAAEG,IAAF,CAAOJ,OAAP,EAAgB,CAAC,aAAD,EAAgB,eAAhB,CAAhB,CAAf;;AAEA,EAAA,SAAKK,GAAL,GAAWT,SAASU,KAAT,CAAeC,OAAf,CAAuBN,EAAEO,MAAF,CAAS,IAAT,EAAe,aAAf,CAAvB,CAAX;;AAEA,EAAA,SAAKC,WAAL;;AAEA,EAAA,SAAKC,QAAL,CAAc,KAAKL,GAAnB,EAAwB,KAAxB,EAA+B,KAAKM,iBAApC;AACD,EAAA,GAvB+D;;AAyBhE,EAAA;;;;;;AAMAC,EAAAA,eAAa,cA/BmD;;AAiChE,EAAA;;;;;;;;AAQAC,EAAAA,cAAY,sBAAW;AACrB,EAAA,WAAO,KAAKR,GAAZ;AACD,EAAA,GA3C+D;;AA6ChE,EAAA;;;;;;;AAOAI,EAAAA,eAAa,uBAAW;AACtB,EAAA,SAAKK,cAAL,GAAsBb,EAAEO,MAAF,CAAS,IAAT,EAAe,eAAf,KAAmC,EAAzD;;AAEAP,EAAAA,MAAEc,IAAF,CAAO,KAAKD,cAAZ,EAA4B,KAAKE,gBAAjC,EAAmD,IAAnD;AACD,EAAA,GAxD+D;;AA0DhE,EAAA;;;;;;;;;;AAUAA,EAAAA,oBAAkB,0BAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACxC,EAAA;AACAD,EAAAA,aAAShB,EAAEkB,OAAF,CAAUF,MAAV,IAAoBA,MAApB,GAA6B,CAACA,MAAD,CAAtC;;AAEAhB,EAAAA,MAAEc,IAAF,CAAOE,MAAP,EAAe,UAASG,KAAT,EAAgB;AAC7B,EAAA,WAAKA,KAAL,CAAWA,KAAX,EAAkBF,KAAlB,EAAyBjB,EAAEoB,IAAF,CAAO,KAAKhB,GAAL,CAASiB,OAAhB,EAAyB,KAAKjB,GAA9B,EAAmCa,KAAnC,CAAzB;AACD,EAAA,KAFD,EAEG,IAFH;AAGD,EAAA,GA3E+D;;AA6EhE,EAAA;;;;;;;;;;;AAWAK,EAAAA,mBAAiB,yBAASN,MAAT,EAAiBC,KAAjB,EAAwB;AACvC,EAAA,SAAKJ,cAAL,CAAoBI,KAApB,IAA6BD,MAA7B;AACA,EAAA,SAAKD,gBAAL,CAAsBC,MAAtB,EAA8BC,KAA9B;;AAEA,EAAA,WAAO,IAAP;AACD,EAAA,GA7F+D;;AA+FhE,EAAA;;;;;;;;;;;;;;;;AAgBAE,EAAAA,SAAO,eAASA,MAAT,EAAgBI,IAAhB,EAAsBC,QAAtB,EAAgC;AACrC,EAAA,QAAGxB,EAAEyB,UAAF,CAAaF,IAAb,CAAH,EAAuB;AACrBC,EAAAA,iBAAWD,IAAX;AACAA,EAAAA,aAAO,EAAP;AACD,EAAA;AACD,EAAA,QAAG,CAACC,QAAJ,EAAc;AACZA,EAAAA,iBAAW,KAAKD,IAAL,CAAX;AACD,EAAA;;AAED,EAAA,QAAMG,kBAAkB1B,EAAEoB,IAAF,CAAO,YAAW;AACxC,EAAA,UAAMO,OAAO3B,EAAE4B,IAAF,CAAO1B,SAAP,EAAkB,CAAlB,CAAb;;AAEA,EAAA;AACA,EAAA,WAAKmB,OAAL,CAAa,cAAb,EAA6BE,IAA7B,EAAmCI,IAAnC;AACA,EAAA,WAAKN,OAAL,CAAapB,KAAb,CAAmB,IAAnB,EAAyB,mBAAkBsB,IAAlB,EAA2BM,MAA3B,CAAkCF,IAAlC,CAAzB;;AAEA,EAAA,WAAKG,kBAAL,CAAwB,CAACP,IAAD,EAAOM,MAAP,CAAcF,IAAd,CAAxB;AACAH,EAAAA,eAASvB,KAAT,CAAe,IAAf,EAAqB0B,IAArB;AACA,EAAA,WAAKI,kBAAL;AACD,EAAA,KAVuB,EAUrB,IAVqB,CAAxB;;AAYA,EAAA,WAAOpC,SAASC,MAAT,CAAgBoC,SAAhB,CAA0Bb,KAA1B,CAAgCc,IAAhC,CAAqC,IAArC,EAA2Cd,MAA3C,EAAkDI,IAAlD,EAAwDG,eAAxD,CAAP;AACD,EAAA,GArI+D;;AAuIhE,EAAA;;;;;;;;AAQAI,EAAAA,sBAAoB,4BAASH,IAAT,EAAe;AACjC,EAAA,SAAKO,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,EAAA,SAAKA,UAAL,CAAgBC,IAAhB,CAAqBR,IAArB;AACD,EAAA,GAlJ+D;;AAqJhE,EAAA;;;;;;;;AAQAS,EAAAA,2BAAyB,mCAAW;AAClC,EAAA,WAAOpC,EAAEqC,IAAF,CAAO,KAAKH,UAAZ,KAA2B,EAAlC;AACD,EAAA,GA/J+D;;AAiKhE,EAAA;;;;;;;AAOAH,EAAAA,sBAAoB,8BAAW;AAC7B,EAAA,SAAKG,UAAL,CAAgBI,GAAhB;AACD,EAAA,GA1K+D;;AA4KhE,EAAA;;;;;;;;;AASAC,EAAAA,yBAAuB,iCAAW;AAChC,EAAA,QAAMC,eAAe,KAAKJ,uBAAL,EAArB;;AAEA,EAAA,QAAGlC,UAAUuC,MAAV,KAAqBD,aAAaC,MAArC,EAA6C;AAC3C,EAAA,aAAO,KAAP;AACD,EAAA;;AAED,EAAA,WAAQvC,UAAUuC,MAAV,KAAqBzC,EAAE0C,KAAF,CAAQxC,SAAR,EAAmB,KAAKsC,YAAxB,EAAsCC,MAAnE;AACD,EAAA,GA7L+D;;AA+LhE,EAAA;;;;;;;;;;;;AAYA/B,EAAAA,qBAAmB,2BAASO,KAAT,EAAgB;AACjC,EAAA,QAAME,QAAQ,KAAKwB,eAAL,CAAqB1B,KAArB,CAAd;;AAEA,EAAA;AACA,EAAA,QAAG,CAACE,KAAJ,EAAW;AACT,EAAA,UAAMQ,OAAO3B,EAAE4B,IAAF,CAAO1B,SAAP,EAAkB,CAAlB,CAAb;AACA,EAAA,WAAKmB,OAAL,CAAapB,KAAb,CAAmB,IAAnB,EAAyB,CAAC,SAAD,EAAY4B,MAAZ,CAAmBF,IAAnB,CAAzB;AACA,EAAA,aAAO,IAAP;AACD,EAAA;;AAED,EAAA,QAAG,KAAKY,qBAAL,CAA2BtC,KAA3B,CAAiC,IAAjC,EAAuCC,SAAvC,CAAH,EAAsD;AACpD,EAAA,aAAO,IAAP;AACD,EAAA;;AAED,EAAA,QAAM0C,YAAY5C,EAAE4B,IAAF,CAAO1B,SAAP,EAAkB,CAAlB,CAAlB;;AAEA,EAAA,QAAM2C,kBAAkB,KAAKC,cAAL,CAAoB3B,KAApB,EAA2ByB,SAA3B,CAAxB;;AAEA,EAAA;AACA,EAAA,WAAO,KAAKG,QAAL,CAAcF,eAAd,EAA+B,EAAExB,SAAS,KAAX,EAA/B,CAAP;AACD,EAAA,GA/N+D;;AAiOhE,EAAA;;;;;;;;;AASAsB,EAAAA,mBAAiB,yBAAS1B,KAAT,EAAgB;AAC/B,EAAA,QAAMD,SAAS,KAAKH,cAAL,CAAoBI,KAApB,CAAf;;AAEA,EAAA,WAAOjB,EAAEkB,OAAF,CAAUF,MAAV,IAAoBA,OAAO,CAAP,CAApB,GAAgCA,MAAvC;AACD,EAAA,GA9O+D;;AAgPhE,EAAA;;;;;;;;;;AAUAgC,EAAAA,iBAAe,uBAAS7B,KAAT,EAAgB8B,GAAhB,EAAqB;AAClC,EAAA;AACA,EAAA,QAAMC,aAAa,aAAnB;;AAEA,EAAA,WAAO/B,MAAMgC,OAAN,CAAcD,UAAd,EAA0BD,GAA1B,CAAP;AACD,EAAA,GA/P+D;;AAiQhE,EAAA;;;;;;;;;;;AAWAH,EAAAA,kBAAgB,wBAAS3B,KAAT,EAAgByB,SAAhB,EAA2B;AACzC,EAAA,WAAO5C,EAAEoD,MAAF,CAASR,SAAT,EAAoB,KAAKI,aAAzB,EAAwC7B,KAAxC,CAAP;AACD,EAAA;AA9Q+D,EAAA,CAAvB,CAA3C;;;;","sourceRoot":"/source/"}